ingress:
    nginx:
        tls: true
        className: nginx-internal-controller
        annotations:
            cert-manager.io/cluster-issuer: bytel-internal-pki-vault
            nginx.ingress.kubernetes.io/upstream-hash-by: "$http_authorization"
            nginx.ingress.kubernetes.io/cors-allow-methods: "GET"
    api:
        tls: true
        className: nginx-internal-controller
        annotations:
            cert-manager.io/cluster-issuer: bytel-internal-pki-vault
            nginx.ingress.kubernetes.io/upstream-hash-by: "$http_authorization"
            nginx.ingress.kubernetes.io/proxy-body-size: 100m
redis:
    imageName: registry.glouton.int.nbyt.fr/bitnami/redis:7.0.15-debian-12-r20
    service: redis-service
    dumpFolderPath: '/dumps'
    storage:
        storageClassName: hostpath
    resources:
        requests:
            cpu: 200m
            memory: 128Mi
        limits:
            cpu: 800m
            memory: 512Mi
delegatedStorage:
    rateLimitWindow: 30000
    rateLimit: 5
    connect: true
    host: 'http://glouton-api-service'
    routes:
        readinessCheck: '/readiness-check'
        get: '/'
        post: '/'
        put: '/'
        delete: '/'
    storageMethod: 'DISTANT_BACKEND'

mediaProvider:
    mediaToken: token
    imageName: 'bouyguestelecom/tada'
    imageVersion: 'latest'
    service: 'http://media-service'
    apiPrefix: ''
    nginx:
        imageName: 'bitnami/nginx:latest'
        resources:
            requests:
                cpu: 200m
                memory: 128Mi
            limits:
                cpu: 800m
                memory: 512Mi
    nginxPurge:
        imageName: 'emcniece/nginx-cache-purge:1.13-alpine'
        resources:
            requests:
                cpu: 200m
                memory: 128Mi
            limits:
                cpu: 800m
                memory: 512Mi
    routes:
        healthcheck:
            get: '/readiness-check'
        file:
            get: '/assets/media/'
            post: '/upload'
            patch: ''
            delete: ''
        files:
            post: '/uploads'
            patch: ''
            delete: ''
        catalog:
            get: '/catalog'
        delegatedStorage:
            get: '/backup'
            post: '/backup'
            patch: '/backup'
            delete: '/backup'
    payloadMaxSize: '10mb'
    rateLimit:
        windowMs: 30000
        limit: 5
    originsAllowed: 'localhost,*'
    methodsAllowed: 'GET,POST'
    storage:
        storageClassName: premium
    resources:
        requests:
            storage: 500Mi
            cpu: 200m
            memory: 128Mi
        limits:
            cpu: 800m
            memory: 512Mi
    backupAndCleanJob:
        imageName: 'bouyguestelecom/tada'
        imageVersion: 'job-latest'
        resources:
            requests:
                cpu: 50m
                memory: 64Mi

rateLimit:
    windowMs: 30000
    limit: 5


domain: .media
env: media-service
protocol: https
NAMESPACES_ALLOWED: DEV,default
