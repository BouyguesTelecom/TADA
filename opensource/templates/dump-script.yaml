apiVersion: v1
kind: ConfigMap
metadata:
    name: dump-configmap
data:
    redis-init.sh: |
        #!/bin/bash

        DUMP_LOCATION="/path/to/dump/location"
        INIT_DUMP_FILE="${DUMP_FILE_NAME_ON_INIT}"
        RESTART_DUMP_FILE="${DUMP_FILE_NAME_ON_RESTART}"
        DUMP_FILE_PATH="/dumps/dump.rdb"

        HOST="${DELEGATED_STORAGE_HOST}"
        BACKUP_PATH="${URL_TO_GET_BACKUP}"
        TOKEN="${DELEGATED_STORAGE_TOKEN}"

        # Fonction pour télécharger le fichier dump distant
        download_dump() {
          curl -L --fail --silent -o "${DUMP_FILE_PATH}" -H "Authorization: Bearer $TOKEN" "$HOST$BACKUP_PATH/$RESTART_DUMP_FILE"
          return $?
        }

        # Vérifier la présence de dump.rdb pour déterminer la stratégie
        if [ -f "${DUMP_FILE_PATH}" ]; then
          echo "Dump found. Proceeding with restart."

          if [ "${RESTORE_ON_RESTART}" = "true" ]; then
            echo "Restoration on restart is enabled"
            download_dump

            if [ $? -ne 0 ]; then
              echo "Error downloading ${RESTART_DUMP_FILE}" >&2
              exit 1
            fi

            echo "Distant dump successfully replaced local."
          else
            echo "RESTORE_ON_RESTART is set to false. Keeping current dump.rdb."
          fi

        else
          echo "No dump found. Proceeding with full initialization."
          rm -f "${DUMP_LOCATION}/dump.rdb"
          echo "Starting with an empty dump.rdb."

          if [ "${RESTORE_ON_INIT}" = "true" ]; then
            echo "Restoration on init is enabled"
            download_dump

            if [ $? -ne 0 ]; then
              echo "Error downloading ${RESTART_DUMP_FILE}" >&2
              exit 1
            fi

            echo "Distant dump successfully loaded during init."
          fi
        fi
