#!/bin/bash

echo "üöÄ TADA K6 Load Testing Suite"
echo "============================="

# V√©rifier si k6 est install√©
if ! command -v k6 &> /dev/null; then
    echo "‚ùå K6 n'est pas install√©. Installez-le avec : brew install k6"
    exit 1
fi

# Construire le projet
echo "üì¶ Building TypeScript files..."
npm run build

if [ $? -ne 0 ]; then
    echo "‚ùå Build failed"
    exit 1
fi

echo "‚úÖ Build successful"
echo ""

# Choix de l'environnement
echo "üåç Choisissez l'environnement cible :"
echo "1) Local (http://localhost:3001)"
echo "2) Kubernetes Ingress (http://media-service.tada-api.media)"
echo "3) Custom URLs (vous sp√©cifiez manuellement)"

read -p "Environnement (1-3): " env_choice

case $env_choice in
    1)
        ENVIRONMENT="local"
        BASE_URL="http://localhost:3001"
        API_URL="http://localhost:3001"
        echo "üè† Environnement local s√©lectionn√©"
        ;;
    2)
        ENVIRONMENT="kubernetes"
        BASE_URL="http://media-service.tada-api.media"
        API_URL="http://media-service.tada-api.media"
        echo "‚ò∏Ô∏è Environnement Kubernetes s√©lectionn√©"
        ;;
    3)
        ENVIRONMENT="custom"
        read -p "URL de base (ex: http://localhost:3001): " BASE_URL
        read -p "URL API (ex: http://localhost:3001): " API_URL
        echo "üîß URLs personnalis√©es configur√©es"
        ;;
    *)
        echo "‚ùå Choix invalide, utilisation de l'environnement local par d√©faut"
        ENVIRONMENT="local"
        BASE_URL="http://localhost:3001"
        API_URL="http://localhost:3001"
        ;;
esac

echo ""
read -p "Bearer Token (d√©faut: 'token'): " BEARER_TOKEN
BEARER_TOKEN=${BEARER_TOKEN:-token}

echo ""
echo "üìã Configuration :"
echo "   Environnement: $ENVIRONMENT"
echo "   API URL: $API_URL"
echo "   Bearer Token: $BEARER_TOKEN"
echo ""

# Menu des tests
echo "Choisissez un test √† ex√©cuter :"
echo "1) Smoke Test (validation fonctionnelle)"
echo "2) Load Test (performance normale)"
echo "3) Stress Test (limites syst√®me)"
echo "4) Spike Test (pics de trafic)"
echo "5) Catalog Test (operations catalog)"
echo "6) Test rapide avec 1 VU pendant 30s"

read -p "Votre choix (1-6): " choice

case $choice in
    1)
        echo "üî• Ex√©cution du Smoke Test..."
        k6 run src/simple-smoke-test.js \
            --env ENVIRONMENT="$ENVIRONMENT" \
            --env BASE_URL="$BASE_URL" \
            --env API_URL="$API_URL" \
            --env BEARER_TOKEN="$BEARER_TOKEN"
        ;;
    2)
        echo "‚ö° Ex√©cution du Load Test..."
        k6 run src/simple-load-test.js \
            --env ENVIRONMENT="$ENVIRONMENT" \
            --env BASE_URL="$BASE_URL" \
            --env API_URL="$API_URL" \
            --env BEARER_TOKEN="$BEARER_TOKEN"
        ;;
    3)
        echo "üí™ Ex√©cution du Stress Test..."
        k6 run dist/scenarios/stress-test.js \
            --env ENVIRONMENT="$ENVIRONMENT" \
            --env BASE_URL="$BASE_URL" \
            --env API_URL="$API_URL" \
            --env BEARER_TOKEN="$BEARER_TOKEN"
        ;;
    4)
        echo "üåä Ex√©cution du Spike Test..."
        k6 run dist/scenarios/spike-test.js \
            --env ENVIRONMENT="$ENVIRONMENT" \
            --env BASE_URL="$BASE_URL" \
            --env API_URL="$API_URL" \
            --env BEARER_TOKEN="$BEARER_TOKEN"
        ;;
    5)
        echo "üìã Ex√©cution du Catalog Test..."
        k6 run dist/scenarios/catalog-test.js \
            --env ENVIRONMENT="$ENVIRONMENT" \
            --env BASE_URL="$BASE_URL" \
            --env API_URL="$API_URL" \
            --env BEARER_TOKEN="$BEARER_TOKEN"
        ;;
    6)
        echo "üèÉ‚Äç‚ôÇÔ∏è Test rapide avec 1 VU pendant 30s..."
        k6 run --vus 1 --duration 30s src/simple-smoke-test.js \
            --env ENVIRONMENT="$ENVIRONMENT" \
            --env BASE_URL="$BASE_URL" \
            --env API_URL="$API_URL" \
            --env BEARER_TOKEN="$BEARER_TOKEN"
        ;;
    *)
        echo "‚ùå Choix invalide"
        exit 1
        ;;
esac