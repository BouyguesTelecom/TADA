meta {
  name: POST FILE
  type: http
  seq: 3
}

script:pre-request {
  const fs = require('fs');
  const path = require('path');
  
  const srcDir = path.resolve(__dirname, '../local/images');
  const destDir = '/tmp/images';
  
  const copyFiles = (src, dest) => {
    fs.readdir(src, (err, files) => {
      if (err || !files) {
        console.error('Error reading directory:', err);
        return;
      }
      files.forEach(file => {
        const srcFile = path.join(src, file);
        const destFile = path.join(dest, file);
  
        fs.copyFile(srcFile, destFile, ()=>{});
      });
    });
  };
  
  const ensureDirExists = (dir, cb) => {
    fs.mkdir(dir, { recursive: true }, err => {
      if (err) {
        console.error('Error creating directory:', err);
        return;
      }
      cb();
    });
  };
  
  ensureDirExists(destDir, () => {
    copyFiles(srcDir, destDir);
  });
}

post {
  url: {{URL_API}}{{URL_API_PREFIX}}/file
  body: multipartForm
  auth: bearer
}

auth:bearer {
  token: {{AUTH_TOKEN}}
}

body:multipart-form {
  namespace: DEV
  file: @file(/tmp/images/test.png)
  destination: tests
  ~expired: true
}

vars:post-response {
  IMAGE_URL: res.body?.data?.[0]?.public_url
  IMAGE_ID: res.body?.data?.[0]?.uuid
}

assert {
  res.status: eq 200
}
